<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.labwinner.dao.ProjectAssistDao">
   
   <resultMap id="projectAssistMap" type="com.labwinner.domain.ProjectAssist">
        <id column="project_assist_id" property="projectAssistId" />        
        <result column="content" property="content" />
        <result column="url" property="url" />
        <result column="assist_date" property="assistDate" />
        <result column="delete_man" property="deleteMan" />
        <result column="read_man" property="readMan" />
        <result column="notice_man" property="noticeMan" />
        
          <result column="msg_delete" property="msgDelete" />
       <association property="sysUser" javaType="com.labwinner.domain.SysUser">
			<id property="userId" column="user_id" />
			<result property="realname" column="realname" />
			<result property="userImage" column="user_image" />
		</association>
		 <association property="projectBasicInfo" javaType="com.labwinner.domain.ProjectBasicInfo">
			<id property="proId" column="pro_id" />
				<id property="proName" column="pro_name" />
						<collection property="projectPictures"
			ofType="com.labwinner.domain.ProjectPicture">
			<id column="project_picture_id" property="projectPictureId" />
			<result column="project_picture_name" property="projectPictureName" />
		</collection>
				
		</association>
		
		
      
    </resultMap>
    
	
 
	<!-- 保存对象方法 -->
	<insert id="save" parameterType="com.labwinner.domain.ProjectAssist"
		useGeneratedKeys="true" keyProperty="projectAssistId">
		insert into
		project_assist(              
			content,                
			url,       
			assist_date,        
			delete_man,  
			read_man,              
			user_id,
			notice_man,
			project_id            
			)
		value(
		#{content},
		#{url},
		#{assistDate},
		#{deleteMan},
		#{readMan},
		#{sysUser.userId},
		#{noticeMan},
		#{projectBasicInfo.proId}
		)
	</insert>

	<select id="getProNumber" resultType="java.util.Map" >
		select user_id from project_number where user_id !=#{userId} and pro_id=#{projectId} and flag=0
	</select>
	
	<select id="getAllContentList" resultType="com.labwinner.domain.ProjectAssist" resultMap="projectAssistMap">
		select project_assist.*,a.realname,a.user_image ,b.pro_id from project_assist 
		left outer join sys_user a on project_assist.user_id=a.user_id
		left outer join project_basic_info b on project_assist.project_id=b.pro_id
		where project_assist.project_assist_id not in 
		(select project_assist_id from project_assist 
		where find_in_set(#{userId},delete_man) and project_id=#{projectId})
		 and project_assist.project_id=#{projectId}
		 order by project_assist.project_assist_id
	</select>
	
	<select id="getAllMessageContentList" resultType="com.labwinner.domain.ProjectAssist" resultMap="projectAssistMap">
		select project_assist.*,a.realname,a.user_image ,b.pro_id from project_assist 
		left outer join sys_user a on project_assist.user_id=a.user_id
		left outer join project_basic_info b on project_assist.project_id=b.pro_id
		where project_assist.project_assist_id not in 
		(select project_assist_id from project_assist 
		where find_in_set(#{userId},delete_man)  
		or find_in_set(#{userId},msg_delete)
		and project_id=#{id})
		 and project_assist.project_id=#{id}
	</select>
	
	
	
	<select id="getByProjectAssistId" resultType="com.labwinner.domain.ProjectAssist" resultMap="projectAssistMap">
		select project_assist.*,a.realname,a.user_image ,b.pro_id from project_assist 
		left outer join sys_user a on project_assist.user_id=a.user_id
		left outer join project_basic_info b on project_assist.project_id=b.pro_id
		where project_assist.project_assist_id=#{projectAssistId}
	</select>
	
	
	
	<!-- 更新已读方法 -->
	<update id="updateReadMan" >
		update project_assist set read_man=#{readMan} where project_assist_id=#{projectAssistId}
	</update>
	
		<!-- 更新删除方法 -->
	<update id="updateDelete" >
		update project_assist set delete_man=#{deleteMan} where project_assist_id=#{projectAssistId}
	</update>
	
	<update id="updateMessage" >
		update project_assist set msg_delete=#{msgDelete} where project_assist_id=#{projectAssistId}
	</update>
	
	
		<select id="getAssistList" resultType="com.labwinner.domain.ProjectAssist" resultMap="projectAssistMap">
		select p.*, a.realname,a.user_image ,b.pro_id 
from project_assist p ,sys_user a,project_basic_info b,
(select max(assist_date) as assist_date ,user_id,project_id from project_assist
where project_id in (
select a.pro_id as project_id
        from 
         project_basic_info a,
         project_number b
         where 
         a.pro_id=b.pro_id
         and  b.flag=0
         and b.pro_role_id=1
         and a.pro_id in (select pro_id from project_number where user_id =#{userId} and flag=0)
)
and project_assist.project_assist_id not in 
		(select project_assist_id from project_assist 
		where find_in_set(#{userId},delete_man) )		 
group by user_id,project_id) f
where p .assist_date=f.assist_date
and p .user_id=f.user_id
and p .user_id=a.user_id
and p .project_id=b.pro_id
and p .project_id=f.project_id
	</select>
	
	
	<select id="getAllUnread" resultType="com.labwinner.domain.ProjectAssist" resultMap="projectAssistMap">
	select * from project_assist where project_assist_id not in 
		(select project_assist_id from project_assist 
		where (find_in_set(#{userId},delete_man) and project_id=#{proId}) or (find_in_set(#{userId},read_man) and project_id=#{proId}))
		 and project_assist.project_id=#{proId}
	</select>
	
	
	<select id="getNewProjectAssist" resultType="com.labwinner.domain.ProjectAssist" resultMap="projectAssistMap">
    select a.*,a.project_id as pro_id,a.pro_name from (select project_assist.*,sys_user.realname,sys_user.user_image,project_basic_info.pro_name,
    project_picture.project_picture_id,project_picture.project_picture_name
     from project_assist
    left outer join sys_user on project_assist.user_id=sys_user.user_id
    left outer join project_basic_info on project_assist.project_id=project_basic_info.pro_id
    left outer join project_picture on project_picture.pro_id=project_basic_info.pro_id
    where project_assist_id not in 
		(select project_assist_id from project_assist 
		where find_in_set(#{userId},delete_man)  or find_in_set(#{userId},msg_delete) ) )a ,
   ( select max(project_assist_id) as project_assist_id,max(assist_date) as assist_date,project_id 
   from  project_assist group by project_id)  b
    where a.assist_date=b.assist_date
    and a.project_id=b.project_id
    and a.project_assist_id=b.project_assist_id
    and a.project_id!=0
	</select>
	
	<select id="getNewTeamAssist" resultType="com.labwinner.domain.ProjectAssist" resultMap="projectAssistMap">
    select a.*,a.project_id as pro_id,a.pro_name from (select project_assist.*,sys_user.realname,sys_user.user_image,project_basic_info.pro_name,
    project_picture.project_picture_id,project_picture.project_picture_name
     from project_assist
    left outer join sys_user on project_assist.user_id=sys_user.user_id
    left outer join project_basic_info on project_assist.project_id=project_basic_info.pro_id
    left outer join project_picture on project_picture.pro_id=project_basic_info.pro_id
    where project_assist_id not in 
		(select project_assist_id from project_assist 
		where find_in_set(#{userId},delete_man)  or find_in_set(#{userId},msg_delete) ) )a ,
   ( select max(project_assist_id) as project_assist_id,max(assist_date) as assist_date,project_id 
   from  project_assist group by project_id)  b
    where a.assist_date=b.assist_date
    and a.project_id=b.project_id
    and a.project_assist_id=b.project_assist_id
    and a.project_id=0
	</select>
	
	
	
	
	
</mapper> 
